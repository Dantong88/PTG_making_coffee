[[package]]
name = "appnope"
version = "0.1.2"
description = "Disable App Nap on macOS >= 10.9"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "asttokens"
version = "2.0.5"
description = "Annotate AST trees with source code positions"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[package.extras]
test = ["astroid", "pytest"]

[[package]]
name = "attrs"
version = "21.4.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.extras]
dev = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "mypy", "pytest-mypy-plugins", "zope.interface", "furo", "sphinx", "sphinx-notfound-page", "pre-commit", "cloudpickle"]
docs = ["furo", "sphinx", "zope.interface", "sphinx-notfound-page"]
tests = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "mypy", "pytest-mypy-plugins", "zope.interface", "cloudpickle"]
tests_no_zope = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "mypy", "pytest-mypy-plugins", "cloudpickle"]

[[package]]
name = "autoprop"
version = "4.0.2"
description = "Infer properties from accessor methods."
category = "main"
optional = false
python-versions = "~=3.6"

[package.dependencies]
signature_dispatch = ">=1.0,<2.0"

[package.extras]
doc = ["sphinx", "sphinx-rtd-theme", "autoclasstoc"]
test = ["pytest", "pytest-cov", "coveralls"]

[[package]]
name = "av"
version = "9.0.1"
description = "Pythonic bindings for FFmpeg's libraries."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "backcall"
version = "0.2.0"
description = "Specifications for callback functions passed in to an API"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "certifi"
version = "2021.10.8"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "chardet"
version = "4.0.0"
description = "Universal encoding detector for Python 2 and 3"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "charset-normalizer"
version = "2.0.12"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.5.0"

[package.extras]
unicode_backport = ["unicodedata2"]

[[package]]
name = "colorama"
version = "0.4.4"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "colorlog"
version = "6.6.0"
description = "Add colours to the output of Python's logging module."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
colorama = {version = "*", markers = "sys_platform == \"win32\""}

[package.extras]
development = ["black", "flake8", "mypy", "pytest", "types-colorama"]

[[package]]
name = "commonmark"
version = "0.9.1"
description = "Python parser for the CommonMark Markdown spec"
category = "main"
optional = false
python-versions = "*"

[package.extras]
test = ["flake8 (==3.7.8)", "hypothesis (==3.55.3)"]

[[package]]
name = "cycler"
version = "0.11.0"
description = "Composable style cycles"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cython"
version = "0.29.28"
description = "The Cython compiler for writing C extensions for the Python language."
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "decorator"
version = "5.1.1"
description = "Decorators for Humans"
category = "dev"
optional = false
python-versions = ">=3.5"

[[package]]
name = "einops"
version = "0.4.1"
description = "A new flavour of deep learning operations"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "executing"
version = "0.8.3"
description = "Get the currently executing AST node of a frame, and other information"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "fonttools"
version = "4.31.1"
description = "Tools to manipulate font files"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
all = ["fs (>=2.2.0,<3)", "lxml (>=4.0,<5)", "zopfli (>=0.1.4)", "lz4 (>=1.7.4.2)", "matplotlib", "sympy", "skia-pathops (>=0.5.0)", "brotlicffi (>=0.8.0)", "scipy", "brotli (>=1.0.1)", "munkres", "unicodedata2 (>=14.0.0)", "xattr"]
graphite = ["lz4 (>=1.7.4.2)"]
interpolatable = ["scipy", "munkres"]
lxml = ["lxml (>=4.0,<5)"]
pathops = ["skia-pathops (>=0.5.0)"]
plot = ["matplotlib"]
symfont = ["sympy"]
type1 = ["xattr"]
ufo = ["fs (>=2.2.0,<3)"]
unicode = ["unicodedata2 (>=14.0.0)"]
woff = ["zopfli (>=0.1.4)", "brotlicffi (>=0.8.0)", "brotli (>=1.0.1)"]

[[package]]
name = "fvcore"
version = "0.1.5.post20220305"
description = "Collection of common code shared among different research projects in FAIR computer vision team"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
iopath = ">=0.1.7"
numpy = "*"
Pillow = "*"
pyyaml = ">=5.1"
tabulate = "*"
termcolor = ">=1.1"
tqdm = "*"
yacs = ">=0.1.6"

[package.extras]
all = ["shapely"]

[[package]]
name = "glooey"
version = "0.3.6"
description = "An object-oriented GUI library for pyglet."
category = "main"
optional = false
python-versions = "~=3.6"

[package.dependencies]
autoprop = "*"
more_itertools = "*"
pyglet = "*"
pyyaml = "*"
vecrec = "*"

[package.extras]
docs = ["sphinx (>=3.1)", "sphinx-rtd-theme", "autoclasstoc"]
tests = ["pytest", "pytest-cov", "coveralls"]

[[package]]
name = "idna"
version = "3.3"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "imageio"
version = "2.16.1"
description = "Library for reading and writing a wide range of image, video, scientific, and volumetric data formats."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.20.0"
pillow = ">=8.3.2"

[package.extras]
build = ["wheel"]
dev = ["invoke", "pytest", "pytest-cov", "fsspec", "black", "flake8"]
docs = ["sphinx", "numpydoc", "pydata-sphinx-theme"]
ffmpeg = ["imageio-ffmpeg", "psutil"]
fits = ["astropy"]
full = ["astropy", "black", "flake8", "fsspec", "gdal", "imageio-ffmpeg", "invoke", "itk", "numpydoc", "psutil", "pydata-sphinx-theme", "pytest", "pytest-cov", "sphinx", "tifffile", "wheel"]
gdal = ["gdal"]
itk = ["itk"]
linting = ["black", "flake8"]
test = ["invoke", "pytest", "pytest-cov", "fsspec"]
tifffile = ["tifffile"]

[[package]]
name = "importlib-resources"
version = "5.4.0"
description = "Read resources from Python packages"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
zipp = {version = ">=3.1.0", markers = "python_version < \"3.10\""}

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=8.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.0.1)", "pytest-black (>=0.3.7)", "pytest-mypy"]

[[package]]
name = "iopath"
version = "0.1.9"
description = "A library for providing I/O abstraction."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
portalocker = "*"
tqdm = "*"

[[package]]
name = "ipython"
version = "8.1.1"
description = "IPython: Productive Interactive Computing"
category = "dev"
optional = false
python-versions = ">=3.8"

[package.dependencies]
appnope = {version = "*", markers = "sys_platform == \"darwin\""}
backcall = "*"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
decorator = "*"
jedi = ">=0.16"
matplotlib-inline = "*"
pexpect = {version = ">4.3", markers = "sys_platform != \"win32\""}
pickleshare = "*"
prompt-toolkit = ">=2.0.0,<3.0.0 || >3.0.0,<3.0.1 || >3.0.1,<3.1.0"
pygments = ">=2.4.0"
stack-data = "*"
traitlets = ">=5"

[package.extras]
all = ["black", "Sphinx (>=1.3)", "ipykernel", "nbconvert", "nbformat", "ipywidgets", "notebook", "ipyparallel", "qtconsole", "curio", "matplotlib (!=3.2.0)", "numpy (>=1.19)", "pandas", "pytest", "testpath", "trio", "pytest-asyncio"]
black = ["black"]
doc = ["Sphinx (>=1.3)"]
kernel = ["ipykernel"]
nbconvert = ["nbconvert"]
nbformat = ["nbformat"]
notebook = ["ipywidgets", "notebook"]
parallel = ["ipyparallel"]
qtconsole = ["qtconsole"]
test = ["pytest", "pytest-asyncio", "testpath"]
test_extra = ["curio", "matplotlib (!=3.2.0)", "nbformat", "numpy (>=1.19)", "pandas", "pytest", "testpath", "trio"]

[[package]]
name = "jedi"
version = "0.18.1"
description = "An autocompletion tool for Python that can be used for text editors."
category = "dev"
optional = false
python-versions = ">=3.6"

[package.dependencies]
parso = ">=0.8.0,<0.9.0"

[package.extras]
qa = ["flake8 (==3.8.3)", "mypy (==0.782)"]
testing = ["Django (<3.1)", "colorama", "docopt", "pytest (<7.0.0)"]

[[package]]
name = "jsonschema"
version = "4.4.0"
description = "An implementation of JSON Schema validation for Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
attrs = ">=17.4.0"
importlib-resources = {version = ">=1.4.0", markers = "python_version < \"3.9\""}
pyrsistent = ">=0.14.0,<0.17.0 || >0.17.0,<0.17.1 || >0.17.1,<0.17.2 || >0.17.2"

[package.extras]
format = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3987", "uri-template", "webcolors (>=1.11)"]
format_nongpl = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3986-validator (>0.1.0)", "uri-template", "webcolors (>=1.11)"]

[[package]]
name = "kiwisolver"
version = "1.4.0"
description = "A fast implementation of the Cassowary constraint solver"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "lxml"
version = "4.8.0"
description = "Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*"

[package.extras]
cssselect = ["cssselect (>=0.7)"]
html5 = ["html5lib"]
htmlsoup = ["beautifulsoup4"]
source = ["Cython (>=0.29.7)"]

[[package]]
name = "mapbox-earcut"
version = "1.0.0"
description = "Python bindings for the mapbox earcut C++ polygon triangulation library."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = "*"

[package.extras]
test = ["pytest"]

[[package]]
name = "matplotlib"
version = "3.5.1"
description = "Python plotting package"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cycler = ">=0.10"
fonttools = ">=4.22.0"
kiwisolver = ">=1.0.1"
numpy = ">=1.17"
packaging = ">=20.0"
pillow = ">=6.2.0"
pyparsing = ">=2.2.1"
python-dateutil = ">=2.7"
setuptools_scm = ">=4"

[[package]]
name = "matplotlib-inline"
version = "0.1.3"
description = "Inline Matplotlib backend for Jupyter"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.dependencies]
traitlets = "*"

[[package]]
name = "meshio"
version = "5.3.4"
description = "I/O for many mesh formats"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = "*"
rich = "*"

[package.extras]
all = ["netcdf4", "h5py"]

[[package]]
name = "more-itertools"
version = "8.12.0"
description = "More routines for operating on iterables, beyond itertools"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "mpmath"
version = "1.2.1"
description = "Python library for arbitrary-precision floating-point arithmetic"
category = "main"
optional = false
python-versions = "*"

[package.extras]
develop = ["pytest (>=4.6)", "pycodestyle", "pytest-cov", "codecov", "wheel"]
tests = ["pytest (>=4.6)"]

[[package]]
name = "msgpack"
version = "1.0.3"
description = "MessagePack (de)serializer."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "networkx"
version = "2.7.1"
description = "Python package for creating and manipulating graphs and networks"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
default = ["numpy (>=1.19)", "scipy (>=1.8)", "matplotlib (>=3.4)", "pandas (>=1.3)"]
developer = ["black (==22.1)", "pyupgrade (>=2.31)", "pre-commit (>=2.17)", "mypy (>=0.931)"]
doc = ["sphinx (>=4.4)", "pydata-sphinx-theme (>=0.8)", "sphinx-gallery (>=0.10)", "numpydoc (>=1.2)", "pillow (>=9.0)", "nb2plots (>=0.6)", "texext (>=0.6.6)"]
extra = ["lxml (>=4.6)", "pygraphviz (>=1.9)", "pydot (>=1.4.2)"]
test = ["pytest (>=7.0)", "pytest-cov (>=3.0)", "codecov (>=2.1)"]

[[package]]
name = "numpy"
version = "1.22.3"
description = "NumPy is the fundamental package for array computing with Python."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "packaging"
version = "21.3"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pyparsing = ">=2.0.2,<3.0.5 || >3.0.5"

[[package]]
name = "parameterized"
version = "0.8.1"
description = "Parameterized testing with any Python test framework"
category = "main"
optional = false
python-versions = "*"

[package.extras]
dev = ["jinja2"]

[[package]]
name = "parso"
version = "0.8.3"
description = "A Python Parser"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
qa = ["flake8 (==3.8.3)", "mypy (==0.782)"]
testing = ["docopt", "pytest (<6.0.0)"]

[[package]]
name = "pexpect"
version = "4.8.0"
description = "Pexpect allows easy control of interactive console applications."
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
ptyprocess = ">=0.5"

[[package]]
name = "pickleshare"
version = "0.7.5"
description = "Tiny 'shelve'-like database with concurrency support"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "pillow"
version = "8.4.0"
description = "Python Imaging Library (Fork)"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "portalocker"
version = "2.4.0"
description = "Wraps the portalocker recipe for easy usage"
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
pywin32 = {version = ">=226", markers = "platform_system == \"Windows\""}

[package.extras]
docs = ["sphinx (>=1.7.1)"]
redis = ["redis"]
tests = ["pytest (>=5.4.1)", "pytest-cov (>=2.8.1)", "sphinx (>=3.0.3)", "pytest-mypy (>=0.8.0)", "redis"]

[[package]]
name = "prompt-toolkit"
version = "3.0.28"
description = "Library for building powerful interactive command lines in Python"
category = "dev"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
wcwidth = "*"

[[package]]
name = "psutil"
version = "5.9.0"
description = "Cross-platform lib for process and system monitoring in Python."
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.extras]
test = ["ipaddress", "mock", "unittest2", "enum34", "pywin32", "wmi"]

[[package]]
name = "psycopg2"
version = "2.9.3"
description = "psycopg2 - Python-PostgreSQL Database Adapter"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "ptyprocess"
version = "0.7.0"
description = "Run a subprocess in a pseudo terminal"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "pure-eval"
version = "0.2.2"
description = "Safely evaluate AST nodes without side effects"
category = "dev"
optional = false
python-versions = "*"

[package.extras]
tests = ["pytest"]

[[package]]
name = "pycollada"
version = "0.7.2"
description = "python library for reading and writing collada documents"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
python-dateutil = ">=2.2"

[package.extras]
prettyprint = ["lxml"]
validation = ["lxml"]

[[package]]
name = "pyglet"
version = "1.5.23"
description = "Cross-platform windowing and multimedia library"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pygments"
version = "2.11.2"
description = "Pygments is a syntax highlighting package written in Python."
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "pyparsing"
version = "3.0.7"
description = "Python parsing module"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
diagrams = ["jinja2", "railroad-diagrams"]

[[package]]
name = "pyrsistent"
version = "0.18.1"
description = "Persistent/Functional/Immutable data structures"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "python-fcl"
version = "0.6.1"
description = "Python bindings for the Flexible Collision Library"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Cython = "*"
numpy = "*"

[[package]]
name = "pytorchvideo"
version = "0.1.5"
description = "A video understanding deep learning library."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
av = "*"
fvcore = "*"
iopath = "*"
networkx = "*"
parameterized = "*"

[package.extras]
dev = ["opencv-python", "decord", "black (==20.8b1)", "sphinx", "isort (==4.3.21)", "flake8 (==3.8.1)", "flake8-bugbear", "flake8-comprehensions", "pre-commit", "nbconvert", "bs4", "autoflake (==1.4)"]
opencv-python = ["opencv-python"]
test = ["coverage", "pytest", "opencv-python", "decord"]

[[package]]
name = "pywavelets"
version = "1.3.0"
description = "PyWavelets, wavelet transform module"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.17.3"

[[package]]
name = "pywin32"
version = "303"
description = "Python for Window Extensions"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyyaml"
version = "6.0"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "requests"
version = "2.27.1"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = {version = ">=2.0.0,<2.1.0", markers = "python_version >= \"3\""}
idna = {version = ">=2.5,<4", markers = "python_version >= \"3\""}
urllib3 = ">=1.21.1,<1.27"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)", "win-inet-pton"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<5)"]

[[package]]
name = "rich"
version = "12.0.0"
description = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"
category = "main"
optional = false
python-versions = ">=3.6.2,<4.0.0"

[package.dependencies]
commonmark = ">=0.9.0,<0.10.0"
pygments = ">=2.6.0,<3.0.0"

[package.extras]
jupyter = ["ipywidgets (>=7.5.1,<8.0.0)"]

[[package]]
name = "rtree"
version = "0.9.7"
description = "R-Tree spatial index for Python GIS"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "scikit-image"
version = "0.19.2"
description = "Image processing in Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
imageio = ">=2.4.1"
networkx = ">=2.2"
numpy = ">=1.17.0"
packaging = ">=20.0"
pillow = ">=6.1.0,<7.1.0 || >7.1.0,<7.1.1 || >7.1.1,<8.3.0 || >8.3.0"
PyWavelets = ">=1.1.1"
scipy = ">=1.4.1"
tifffile = ">=2019.7.26"

[package.extras]
data = ["pooch (>=1.3.0)"]
docs = ["sphinx (>=1.8)", "sphinx-gallery (>=0.10.1)", "numpydoc (>=1.0)", "sphinx-copybutton", "pytest-runner", "scikit-learn", "matplotlib (>=3.3)", "dask[array] (>=0.15.0,!=2.17.0)", "cloudpickle (>=0.2.1)", "pandas (>=0.23.0)", "seaborn (>=0.7.1)", "pooch (>=1.3.0)", "tifffile (>=2020.5.30)", "myst-parser", "ipywidgets", "plotly (>=4.14.0)", "kaleido"]
optional = ["simpleitk", "astropy (>=3.1.2)", "cloudpickle (>=0.2.1)", "dask[array] (>=1.0.0,!=2.17.0)", "matplotlib (>=3.0.3)", "pooch (>=1.3.0)", "pyamg", "qtpy"]
test = ["asv", "codecov", "flake8", "matplotlib (>=3.0.3)", "pooch (>=1.3.0)", "pytest (>=5.2.0)", "pytest-cov (>=2.7.0)", "pytest-localserver", "pytest-faulthandler"]

[[package]]
name = "scipy"
version = "1.8.0"
description = "SciPy: Scientific Library for Python"
category = "main"
optional = false
python-versions = ">=3.8,<3.11"

[package.dependencies]
numpy = ">=1.17.3,<1.25.0"

[[package]]
name = "setuptools-scm"
version = "6.4.2"
description = "the blessed package to manage your versions by scm tags"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
packaging = ">=20.0"
tomli = ">=1.0.0"

[package.extras]
test = ["pytest (>=6.2)", "virtualenv (>20)"]
toml = ["setuptools (>=42)"]

[[package]]
name = "shapely"
version = "1.8.1.post1"
description = "Geometric objects, predicates, and operations"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
all = ["pytest", "pytest-cov", "numpy"]
test = ["pytest", "pytest-cov"]
vectorized = ["numpy"]

[[package]]
name = "signature-dispatch"
version = "1.0.0"
description = "Execute the first function that matches the given arguments."
category = "main"
optional = false
python-versions = "~=3.6"

[package.dependencies]
typeguard = "*"

[package.extras]
doc = ["sphinx", "sphinx-rtd-theme", "autoclasstoc"]
test = ["pytest", "pytest-cov", "coveralls"]

[[package]]
name = "simpleaudio"
version = "1.0.4"
description = "Simple, asynchronous audio playback for Python 3."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "smqtk-classifier"
version = "0.19.0"
description = "Algorithms, data structures and utilities around performing classificationof inputs."
category = "main"
optional = false
python-versions = ">=3.6,<4.0"

[package.dependencies]
numpy = ">=1.19.5,<2.0.0"
smqtk-core = ">=0.18.0"
smqtk-dataprovider = ">=0.16.0"
smqtk-descriptors = ">=0.18"

[package.extras]
sklearn = ["scikit-learn (>=0.24.1,<0.25.0)"]

[[package]]
name = "smqtk-core"
version = "0.18.1"
description = "Python toolkit for pluggable algorithms and data structures for multimedia-based machine learning."
category = "main"
optional = false
python-versions = ">=3.6,<4.0"

[[package]]
name = "smqtk-dataprovider"
version = "0.16.0"
description = "SMQTK Data provision abstractions and implementations"
category = "main"
optional = false
python-versions = ">=3.6,<4.0"

[package.dependencies]
numpy = ">=1.19.5,<2.0.0"
requests = ">=2.25.1,<3.0.0"
smqtk-core = ">=0.18"

[package.extras]
girder = ["girder-client (>=3.1.3,<4.0.0)"]
filemagic = ["file-magic (>=0.4.0,<0.5.0)"]
psql = ["psycopg2-binary (>=2.8.6,<3.0.0)"]

[[package]]
name = "smqtk-descriptors"
version = "0.18.1"
description = "Algorithms, data structures and utilities around computingdescriptor vectors from data."
category = "main"
optional = false
python-versions = ">=3.6,<4.0"

[package.dependencies]
numpy = ">=1.19.5,<2.0.0"
smqtk-core = ">=0.18.0"
smqtk-dataprovider = ">=0.16.0"
smqtk-image-io = ">=0.16.2,<0.17.0"

[[package]]
name = "smqtk-detection"
version = "0.19.0"
description = "Algorithms, data structures and utilities around performing detection of inputs"
category = "main"
optional = false
python-versions = ">=3.6.2,<3.10"

[package.dependencies]
smqtk-classifier = ">=0.19.0"
smqtk-core = ">=0.18.0"
smqtk-dataprovider = ">=0.16.0"
smqtk-image-io = ">=0.16.2"

[package.extras]
torch = ["torch (>=1.10.0,<2.0.0)", "torchvision (>=0.11.1,<0.12.0)"]
centernet = ["torch (>=1.10.0,<2.0.0)", "opencv-python (>=4.5.2.0,<4.6.0.0)", "numba (>=0.53.0,<0.54.0)"]

[[package]]
name = "smqtk-image-io"
version = "0.16.3"
description = "SMQTK Image IO"
category = "main"
optional = false
python-versions = ">=3.6,<4.0"

[package.dependencies]
numpy = ">=1.19.5,<2.0.0"
pillow = ">=8.2.0,<9.0.0"
smqtk-core = ">=0.18.0"
smqtk-dataprovider = ">=0.16.0"

[[package]]
name = "stack-data"
version = "0.2.0"
description = "Extract data from python stack frames and tracebacks for informative displays"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
asttokens = "*"
executing = "*"
pure-eval = "*"

[package.extras]
tests = ["pytest", "typeguard", "pygments", "littleutils", "cython"]

[[package]]
name = "svg.path"
version = "5.0.0"
description = "SVG path objects and parser"
category = "main"
optional = false
python-versions = "*"

[package.extras]
test = ["pillow", "pytest", "pytest-cov"]

[[package]]
name = "sympy"
version = "1.10.1"
description = "Computer algebra system (CAS) in Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
mpmath = ">=0.19"

[[package]]
name = "tabulate"
version = "0.8.9"
description = "Pretty-print tabular data"
category = "main"
optional = false
python-versions = "*"

[package.extras]
widechars = ["wcwidth"]

[[package]]
name = "termcolor"
version = "1.1.0"
description = "ANSII Color formatting for output in terminal."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "tifffile"
version = "2022.3.16"
description = "Read and write TIFF files"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.19.2"

[package.extras]
all = ["imagecodecs (>=2021.11.20)", "matplotlib (>=3.3)", "lxml"]

[[package]]
name = "timm"
version = "0.5.4"
description = "(Unofficial) PyTorch Image Models"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
torch = ">=1.4"
torchvision = "*"

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "torch"
version = "1.10.2"
description = "Tensors and Dynamic neural networks in Python with strong GPU acceleration"
category = "main"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
typing-extensions = "*"

[[package]]
name = "torchvision"
version = "0.11.3"
description = "image and video datasets and models for torch deep learning"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = "*"
pillow = ">=5.3.0,<8.3.0 || >8.3.0"
torch = "1.10.2"

[package.extras]
scipy = ["scipy"]

[[package]]
name = "tqdm"
version = "4.63.0"
description = "Fast, Extensible Progress Meter"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
dev = ["py-make (>=0.1.0)", "twine", "wheel"]
notebook = ["ipywidgets (>=6)"]
telegram = ["requests"]

[[package]]
name = "traitlets"
version = "5.1.1"
description = "Traitlets Python configuration system"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest"]

[[package]]
name = "transitions"
version = "0.8.11"
description = "A lightweight, object-oriented Python state machine implementation with many extensions."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[package.extras]
diagrams = ["pygraphviz"]
test = ["pytest"]

[[package]]
name = "triangle"
version = "20220202"
description = "Python binding to the triangle library"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = "*"

[[package]]
name = "trimesh"
version = "3.12.7"
description = "Import, export, process, analyze and view triangular meshes."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
chardet = {version = "*", optional = true, markers = "extra == \"all\""}
colorlog = {version = "*", optional = true, markers = "extra == \"all\""}
glooey = {version = "*", optional = true, markers = "extra == \"all\""}
jsonschema = {version = "*", optional = true, markers = "extra == \"all\""}
lxml = {version = "*", optional = true, markers = "extra == \"all\""}
mapbox-earcut = {version = "*", optional = true, markers = "extra == \"all\""}
meshio = {version = "*", optional = true, markers = "extra == \"all\""}
msgpack = {version = "*", optional = true, markers = "extra == \"all\""}
networkx = {version = "*", optional = true, markers = "extra == \"all\""}
numpy = "*"
pillow = {version = "*", optional = true, markers = "extra == \"all\""}
psutil = {version = "*", optional = true, markers = "extra == \"all\""}
pycollada = {version = "*", optional = true, markers = "extra == \"all\""}
pyglet = {version = "*", optional = true, markers = "extra == \"all\""}
python-fcl = {version = "*", optional = true, markers = "extra == \"all\""}
requests = {version = "*", optional = true, markers = "extra == \"all\""}
rtree = {version = "*", optional = true, markers = "extra == \"all\""}
scikit-image = {version = "*", optional = true, markers = "extra == \"all\""}
scipy = {version = "*", optional = true, markers = "extra == \"all\""}
shapely = {version = "*", optional = true, markers = "extra == \"all\""}
"svg.path" = {version = "*", optional = true, markers = "extra == \"all\""}
sympy = {version = "*", optional = true, markers = "extra == \"all\""}
triangle = {version = "*", optional = true, markers = "extra == \"all\""}
xatlas = {version = "*", optional = true, markers = "extra == \"all\""}
xxhash = {version = "*", optional = true, markers = "extra == \"all\""}

[package.extras]
all = ["lxml", "glooey", "setuptools", "scipy", "meshio", "triangle", "colorlog", "scikit-image", "xatlas", "xxhash", "msgpack", "mapbox-earcut", "rtree", "jsonschema", "pycollada", "python-fcl", "pyglet", "networkx", "chardet", "pillow", "psutil", "svg.path", "requests", "sympy", "shapely"]
easy = ["lxml", "rtree", "xxhash", "setuptools", "msgpack", "jsonschema", "scipy", "pycollada", "pyglet", "networkx", "chardet", "pillow", "colorlog", "svg.path", "requests", "sympy", "shapely"]
test = ["pyinstrument", "ezdxf", "coveralls", "pytest-cov", "pytest"]

[[package]]
name = "typeguard"
version = "2.13.3"
description = "Run-time type checker for Python"
category = "main"
optional = false
python-versions = ">=3.5.3"

[package.extras]
doc = ["sphinx-rtd-theme", "sphinx-autodoc-typehints (>=1.2.0)"]
test = ["pytest", "typing-extensions", "mypy"]

[[package]]
name = "typing-extensions"
version = "4.1.1"
description = "Backported and Experimental Type Hints for Python 3.6+"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "urllib3"
version = "1.26.9"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4"

[package.extras]
brotli = ["brotlicffi (>=0.8.0)", "brotli (>=1.0.9)", "brotlipy (>=0.6.0)"]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "ipaddress"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "vecrec"
version = "0.3.1"
description = "2D vector and rectangle classes."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
autoprop = "*"

[package.extras]
docs = ["sphinx", "sphinx-rtd-theme", "autoclasstoc"]
tests = ["pytest", "pytest-cov", "coveralls"]

[[package]]
name = "wcwidth"
version = "0.2.5"
description = "Measures the displayed width of unicode strings in a terminal"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "xatlas"
version = "0.0.6"
description = "Python bindings for xatlas"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "xxhash"
version = "3.0.0"
description = "Python binding for xxHash"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "yacs"
version = "0.1.8"
description = "Yet Another Configuration System"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
PyYAML = "*"

[[package]]
name = "zipp"
version = "3.7.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=8.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "pytest-cov", "pytest-enabler (>=1.0.1)", "jaraco.itertools", "func-timeout", "pytest-black (>=0.3.7)", "pytest-mypy"]

[metadata]
lock-version = "1.1"
python-versions = "^3.8,<3.10"
content-hash = "34b34f31a86d7c39aa65ed343e53964b997062d0e7441dfd59f49804d38a18f4"

[metadata.files]
appnope = []
asttokens = []
attrs = []
autoprop = []
av = []
backcall = []
certifi = []
chardet = []
charset-normalizer = []
colorama = []
colorlog = []
commonmark = []
cycler = []
cython = []
decorator = []
einops = []
executing = []
fonttools = []
fvcore = []
glooey = []
idna = []
imageio = []
importlib-resources = []
iopath = []
ipython = []
jedi = []
jsonschema = []
kiwisolver = []
lxml = []
mapbox-earcut = []
matplotlib = []
matplotlib-inline = []
meshio = []
more-itertools = []
mpmath = []
msgpack = []
networkx = []
numpy = []
packaging = []
parameterized = []
parso = []
pexpect = []
pickleshare = []
pillow = []
portalocker = []
prompt-toolkit = []
psutil = []
psycopg2 = []
ptyprocess = []
pure-eval = []
pycollada = []
pyglet = []
pygments = []
pyparsing = []
pyrsistent = []
python-dateutil = []
python-fcl = []
pytorchvideo = []
pywavelets = []
pywin32 = []
pyyaml = []
requests = []
rich = []
rtree = []
scikit-image = []
scipy = []
setuptools-scm = []
shapely = []
signature-dispatch = []
simpleaudio = []
six = []
smqtk-classifier = []
smqtk-core = []
smqtk-dataprovider = []
smqtk-descriptors = []
smqtk-detection = []
smqtk-image-io = []
stack-data = []
"svg.path" = []
sympy = []
tabulate = []
termcolor = []
tifffile = []
timm = []
tomli = []
torch = []
torchvision = []
tqdm = []
traitlets = []
transitions = []
triangle = []
trimesh = []
typeguard = []
typing-extensions = []
urllib3 = []
vecrec = []
wcwidth = []
xatlas = []
xxhash = []
yacs = []
zipp = []
