//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Angel
{
    [Serializable]
    public class TaskGraphMsg : Message
    {
        public const string k_RosMessageName = "angel_msgs/TaskGraph";
        public override string RosMessageName => k_RosMessageName;

        // 
        //  Message exporting the task (directed) graph structure.
        // 
        //  TODO: format likely depends on decisions regarding programatic structure, e.g.
        //        there are parallel threads looking into PDDL loading / representation,
        //        etc.
        // 
        public TaskNodeMsg[] task_nodes;
        //  Pairs of integers mapping parent-child node relationships in the directed
        //  graph.
        //  Integer values are indices into the above `task_nodes` array.
        //  This array should always have an even number of elements.
        public uint[] node_edges;

        public TaskGraphMsg()
        {
            this.task_nodes = new TaskNodeMsg[0];
            this.node_edges = new uint[0];
        }

        public TaskGraphMsg(TaskNodeMsg[] task_nodes, uint[] node_edges)
        {
            this.task_nodes = task_nodes;
            this.node_edges = node_edges;
        }

        public static TaskGraphMsg Deserialize(MessageDeserializer deserializer) => new TaskGraphMsg(deserializer);

        private TaskGraphMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.task_nodes, TaskNodeMsg.Deserialize, deserializer.ReadLength());
            deserializer.Read(out this.node_edges, sizeof(uint), deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.WriteLength(this.task_nodes);
            serializer.Write(this.task_nodes);
            serializer.WriteLength(this.node_edges);
            serializer.Write(this.node_edges);
        }

        public override string ToString()
        {
            return "TaskGraphMsg: " +
            "\ntask_nodes: " + System.String.Join(", ", task_nodes.ToList()) +
            "\nnode_edges: " + System.String.Join(", ", node_edges.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
