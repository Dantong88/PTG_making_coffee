//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Angel
{
    [Serializable]
    public class EyeGazeDataMsg : Message
    {
        public const string k_RosMessageName = "angel_msgs/EyeGazeData";
        public override string RosMessageName => k_RosMessageName;

        // 
        //  Message for transporting the current eye gaze information for the user.
        // 
        public Std.HeaderMsg header;
        //  Eye gaze position
        public Geometry.PointMsg gaze_origin;
        //  Eye gaze direction
        public Geometry.Vector3Msg gaze_direction;
        //  Head movement info
        public Geometry.Vector3Msg head_movement_direction;
        public Geometry.Vector3Msg head_velocity;

        public EyeGazeDataMsg()
        {
            this.header = new Std.HeaderMsg();
            this.gaze_origin = new Geometry.PointMsg();
            this.gaze_direction = new Geometry.Vector3Msg();
            this.head_movement_direction = new Geometry.Vector3Msg();
            this.head_velocity = new Geometry.Vector3Msg();
        }

        public EyeGazeDataMsg(Std.HeaderMsg header, Geometry.PointMsg gaze_origin, Geometry.Vector3Msg gaze_direction, Geometry.Vector3Msg head_movement_direction, Geometry.Vector3Msg head_velocity)
        {
            this.header = header;
            this.gaze_origin = gaze_origin;
            this.gaze_direction = gaze_direction;
            this.head_movement_direction = head_movement_direction;
            this.head_velocity = head_velocity;
        }

        public static EyeGazeDataMsg Deserialize(MessageDeserializer deserializer) => new EyeGazeDataMsg(deserializer);

        private EyeGazeDataMsg(MessageDeserializer deserializer)
        {
            this.header = Std.HeaderMsg.Deserialize(deserializer);
            this.gaze_origin = Geometry.PointMsg.Deserialize(deserializer);
            this.gaze_direction = Geometry.Vector3Msg.Deserialize(deserializer);
            this.head_movement_direction = Geometry.Vector3Msg.Deserialize(deserializer);
            this.head_velocity = Geometry.Vector3Msg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.gaze_origin);
            serializer.Write(this.gaze_direction);
            serializer.Write(this.head_movement_direction);
            serializer.Write(this.head_velocity);
        }

        public override string ToString()
        {
            return "EyeGazeDataMsg: " +
            "\nheader: " + header.ToString() +
            "\ngaze_origin: " + gaze_origin.ToString() +
            "\ngaze_direction: " + gaze_direction.ToString() +
            "\nhead_movement_direction: " + head_movement_direction.ToString() +
            "\nhead_velocity: " + head_velocity.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
