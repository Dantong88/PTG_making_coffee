//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Angel
{
    [Serializable]
    public class HandJointPoseMsg : Message
    {
        public const string k_RosMessageName = "angel_msgs/HandJointPose";
        public override string RosMessageName => k_RosMessageName;

        // 
        //  Message for transmitting a single hand joint pose.
        // 
        //  Which joint this pose represents
        public string joint;
        //  Pose (position and rotation)
        public Geometry.PoseMsg pose;

        public HandJointPoseMsg()
        {
            this.joint = "";
            this.pose = new Geometry.PoseMsg();
        }

        public HandJointPoseMsg(string joint, Geometry.PoseMsg pose)
        {
            this.joint = joint;
            this.pose = pose;
        }

        public static HandJointPoseMsg Deserialize(MessageDeserializer deserializer) => new HandJointPoseMsg(deserializer);

        private HandJointPoseMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.joint);
            this.pose = Geometry.PoseMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.joint);
            serializer.Write(this.pose);
        }

        public override string ToString()
        {
            return "HandJointPoseMsg: " +
            "\njoint: " + joint.ToString() +
            "\npose: " + pose.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
